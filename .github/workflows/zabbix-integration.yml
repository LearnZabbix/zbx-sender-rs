name: zabbix-integration
on:
  # TODO: push for testing only
  push:
    branches:
      - ci
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  temporary-passwords:
    runs-on: ubuntu-latest
    outputs:
      postgres_password: ${{ steps.postgres_password.outputs.password }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - id: postgres_password
        uses: ./.github/actions/generate-password

  build:
    runs-on: ubuntu-latest

    env:
      BUILD_FEATURES: "${{ matrix.exclusive-features }} tracing clap"
      CI_EXAMPLE_BIN: clap_sender

    strategy:
      matrix:
        tls:
          - openssl
          - rustls
        async:
          - blocking
          - tokio
        include:
          - async: blocking
            tls: openssl
            exclusive-features: tls_openssl
          - async: blocking
            tls: rustls
            exclusive-features: tls_rustls
          - async: tokio
            tls: openssl
            exclusive-features: "async_tokio tls_openssl tls_openssl_tokio"
          - async: tokio
            tls: rustls
            exclusive-features: "async_tokio tls_rustls tls_rustls_tokio"
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build example for CI integration tests
        run: cargo build --verbose --features "${{ env.BUILD_FEATURES }}" --example ${{ env.CI_EXAMPLE_BIN }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CI_EXAMPLE_BIN }}-${{ matrix.async }}-${{ matrix.tls }}
          path: target/debug/examples/${{ env.CI_EXAMPLE_BIN }}


  test:
    runs-on: ubuntu-latest

    needs:
      - build
      - temporary-passwords

    env:
      CI_EXAMPLE_BIN: clap_sender-${{ matrix.async }}-${{ matrix.tls }}

    strategy:
      matrix:
        encryption:
          - unencrypted
          - psk
          - cert
        tls:
          - openssl
          - rustls
        async:
          - blocking
          - tokio
        exclude:
          - encryption: psk
            tls: rustls

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.CI_EXAMPLE_BIN }}

      - name: DEBUG - WHERE IS THE ARTIFACT
        run: |
          ls -lR

      - name: Make downloaded artifact executable
        run: chmod a+x ${{ env.CI_EXAMPLE_BIN }}

      - name: DEBUG - Check if binary runs
        run: |
          echo "--tls-connect ${{ matrix.encryption }}"
          ./${{ env.CI_EXAMPLE_BIN }} --help

      - name: Call Zabbix API to create test Host and Items
        run: ./script/zabbix_api_setup.py --wait 120 http://localhost:8080

    services:
      postgres-server:
        image: postgres:latest
        env:
          POSTGRES_USER: zabbix
          POSTGRES_PASSWORD: ${{ needs.temporary-passwords.outputs.postgres_password }}
          POSTGRES_DB: zabbix
      zabbix-frontend:
        image: zabbix/zabbix-web-nginx-pgsql:latest
        env:
          POSTGRES_USER: zabbix
          POSTGRES_PASSWORD: ${{ needs.temporary-passwords.outputs.postgres_password }}
          POSTGRES_DB: zabbix
          PHP_TZ: "Etc/UTC"
          ZBX_SERVER_HOST: zabbix-server
        ports:
          - "8080:8080"
      zabbix-server:
        image: zabbix/zabbix-server-pgsql:latest
        env:
          POSTGRES_USER: zabbix
          POSTGRES_PASSWORD: ${{ needs.temporary-passwords.outputs.postgres_password }}
          POSTGRES_DB: zabbix
        ports:
          - "10051:10051"
